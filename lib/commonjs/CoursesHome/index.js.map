{"version":3,"sources":["index.tsx"],"names":["HomeCourses","card","toggleLike","toggleBookmarked","styles","courseCard","cardImageContainer","uri","thumbnail","cardImage","cardHeader","cardHeaderCategory","author","flexDirection","alignItems","courseTime","timeToRead","cardTitle","title","cardActions","justifyContent","color","isRead","isLiked","isBookmarked","marginLeft","StyleSheet","create","marginTop","backgroundColor","minHeight","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","marginBottom","elevation","flex","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Image,\r\n} from \"react-native\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\n\r\ntype CourseCard = {\r\n  title: string;\r\n  author: string;\r\n  thumbnail: string;\r\n  isLiked: boolean;\r\n  isRead: boolean;\r\n  isBookmarked: boolean;\r\n  timeToRead: number;\r\n  categories: string[];\r\n};\r\n\r\nconst HomeCourses: React.FC<{\r\n  card: CourseCard;\r\n  toggleLike: () => void;\r\n  toggleBookmarked: () => void;\r\n}> = ({ card, toggleLike, toggleBookmarked }) => {\r\n  return (\r\n    <View style={styles.courseCard}>\r\n      <View style={styles.cardImageContainer}>\r\n        <Image\r\n          source={{ uri: `${card.thumbnail}` }}\r\n          style={styles.cardImage}\r\n        ></Image>\r\n      </View>\r\n      <View style={styles.cardHeader}>\r\n        <View>\r\n          <Text style={styles.cardHeaderCategory}>{card.author}</Text>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <FontAwesomeIcon icon=\"stopwatch\" />\r\n          <Text style={styles.courseTime}>{card.timeToRead}min</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.cardTitle}>\r\n        <Text>{card.title}</Text>\r\n      </View>\r\n      <View style={styles.cardActions}>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon=\"eye\"\r\n            style={{ color: card.isRead ? \"blue\" : \"#e0e0e0\" }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TouchableWithoutFeedback onPress={toggleLike}>\r\n            <FontAwesomeIcon\r\n              icon=\"thumbs-up\"\r\n              style={{\r\n                color: card.isLiked ? \"blue\" : \"#e0e0e0\",\r\n              }}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n\r\n          <TouchableWithoutFeedback onPress={toggleBookmarked}>\r\n            <FontAwesomeIcon\r\n              icon=\"bookmark\"\r\n              style={{\r\n                color: card.isBookmarked ? \"blue\" : \"#e0e0e0\",\r\n                marginLeft: 20,\r\n              }}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  courseCard: {\r\n    marginTop: 40,\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"white\",\r\n\r\n    minHeight: 300,\r\n    borderRadius: 20,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    marginBottom: 30,\r\n    elevation: 5,\r\n  },\r\n  cardImageContainer: {\r\n    flex: 3,\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n  },\r\n  cardImage: {\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  cardHeader: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  cardHeaderCategory: { fontWeight: \"bold\" },\r\n  courseTime: {\r\n    marginLeft: 5,\r\n  },\r\n  cardTitle: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n  },\r\n  cardActions: {\r\n    paddingHorizontal: 10,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nexport default HomeCourses;\r\n"]}